<html manifest="ac.appcache"><head>
<!-- put no-referrer so preload reqs match later fetch reqs instead of double req -->
<meta name=mobileoptimized content=0><meta name="referrer" content="no-referrer">
<!-- preconnect Chrome 46/FF41-70 115-, preconnect Chrome 50/FF 85, inc both -->
<link href="https://api.weather.com/v3/wx/forecast/hourly/1day?geocode=40.74,-73.91&format=json&units=e&language=en-us&apiKey=8de2d8b3a93542c9a2d8b3a935a2c909" as="fetch" rel="preload" crossorigin>
<!-- routes.js takes a while to generate b/c its a CFW, so start it early -->
<!-- it doesn't cause congestion on the wire b/c CFW latency, its also small -->
<!-- vs MTA alerts file -->
<link href=routes.js as="fetch" rel="preload" crossorigin>
<!-- dont do preconnect fallback for weather, not worth wire bytes -->
<!-- 1062 vs 1059 bytes gz local af rm weather PC tag -->
<!-- 1059 vs 1047 bytes gz local af rm 2 dns-fetch tags -->
<link href="//collector-otp-prod.camsys-apps.com" rel="preconnect" crossorigin>
<link href=stations.htm rel=prefetch>
<link href=mn/stations.htm rel=prefetch>
<link href=li/stations.htm rel=prefetch>
<link href=status.htm rel=prefetch>
<title>tinymta - Lightweight NYC MTA Subway Train arrival times</title>
</head><body>
Do you have a<br>
[1]<a accesskey=1 href=stations.htm>Smart Phone (Subway)</a><br>
[2]<a accesskey=2 href=mn/stations.htm>Smart Phone (Metro North)</a><br>
[3]<a accesskey=3 href=li/stations.htm>Smart Phone (Long Island)</a><br>
[4]<a accesskey=4 href=jsrdt.htm>Dumb Phone (Subway)</a><br>
[5]<a accesskey=5 href=mn/jsrdt.htm>Dumb Phone (Metro North)</a><br>
[6]<a accesskey=6 href=li/jsrdt.htm>Dumb Phone (Long Island)</a><br>
[7]<a accesskey=7 href=status.htm>Service Changes</a><br>
<!-- [8]<a accesskey=8 href=plan.htm>Smart Phone UI (Subway) Trip Planner</a><br> -->
<!-- [9]<a accesskey=9 href=more.htm>More</a><br> -->
[0]<a accesskey=0 href=abt.htm>About</a>
<!-- get I/O on wire first -->
<!-- id=n used by as.js in async mode to find its write location, keep single space in div -->
<div>
Â 
<script async src=as.js id=n></script>
</div>
<script async src=dumb.js></script>
<script>
//gz 1021 "document.", gz 1019 "d." everywhere
var d = document;
//IE 5.5 and 6.0 don't have document.head
var headElem = d.documentElement.firstChild;
function y (nosvg, mkWeatherCellContainerPF) {
  fetch(headElem.children[2].href,{},'wea')
  .then(function (r) {
  r.status != 200 ? //put != first for r.status gzip reasons
    alert("error http status " + r.status)
  :
    r.json().then(function (r) {
/*
was a polyfill func or real doc.CDF, but it was switched to "polyfill always"
DIV tag, to keep this minified/gziped htm file
inside exactly 1 http 1.1 resp packet (1500 bytes)
*/
      var frag = d.createElement('div'),
      e, //elem
      v, //val
      img_ext = nosvg ? nosvg : '.svg',
      br = d.createElement('br'),
      i = 0;
      /*hardcode 24 hr in a day to save wire*/
      for (; i < 24; i++) {
/*no inline-block for IE 5.0, inline-block 5.5 up.
  A 1 cell table, is a old PF hack inline-block emulate for IE 5.0
  http://mrclay.org/web_design/shrink_to_fit/
  http://mrclay.org/web_design/shrink_to_fit/ieshrink.js
  I fixed a bug in code above "<table><tr><td>" only works for
  .innerHTML/real HTML parser in IE, <tbody> required if appendChild/W3C DOM
  for IE 5 5.5 and 6, in my testing
  see https://blog.tomayac.com/2006/06/23/dynamically-created-tables-in-internet-explorer-214331/
*/
        if (mkWeatherCellContainerPF) {
          e = mkWeatherCellContainerPF(frag);
        } else {
/*
originally a DIV tag, switched to SPAN for IE 5.5/6 compat.
So IE 11 and all FF/WBK/Chrome know style=display=inline-block on a DIV tag
but IE 5.5/6 refuse to honor inline-block on a DIV tag, switch to SPAN
*/
          e = frag.appendChild(d.createElement('span'));
        }
        v = +r.validTimeLocal[i].slice(11, 13);
        //perf, skip locale/Date objects
        e.appendChild(d.createTextNode((v % 12 || 12) + (v >= 12 ? 'PM\xa0' : 'AM\xa0')));
/*
Only opera 10 fatal excpt err if missing arg. All IEs don't err and no modern
Safari/WBK/Chrome/FF needs arg. But MDN archives say W3C fuzzyness and spec
flipping between FF 1-3?? and W3C on meaning of no arg, prob caused Opera devs
to mandate the arg 100% of time, false is "clone shallow" true is "clone deep"
meaningless for self closing BR tag
*/
        e.appendChild(br.cloneNode(0));
        e.appendChild(d.createTextNode(r.temperature[i] + "F"));
        e.appendChild(br.cloneNode(0));
        e.appendChild(d.createTextNode(r.precipChance[i] + "%"));
/*
        v = e.appendChild(d.createElement('font'));
        v.color='#4ec1f5';
        v.face="Wingdings";
        v.appendChild(d.createTextNode("S"));

add color for older Windows, its ignored on android
*/
        v = e.appendChild(d.createElement('font'));
        v.color='#4ec1f5';
        v.appendChild(d.createTextNode("\ud83d\udca7"));
        e.appendChild(br.cloneNode(0));
        e.appendChild(d.createElement('img'))
        .src =
/*STARTINSERTPATH*/
          'w/'
/*ENDINSERTPATH*/
          +r.iconCode[i] + img_ext;
      }
      d.body.appendChild(frag);
    }); //json cb
  }); //end fetch CB
};
if (this.fetch) {
  y();
} else {
  //dont double load in dumb.js
  f=1;
  headElem.appendChild(d.createElement("script")).src = 'f.js';
}
</script>
<!-- parse after script tag, weather rendering is async b/c IO -->
<!-- add 2 blank lines if mobile, as.js UI jerk -->
<style>
span{display:inline-block}img{height:2em}@media(max-width:600px){div{min-height:2lh}}
</style>
</body></html>
